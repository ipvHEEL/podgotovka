# Form implementation generated from reading ui file 'C:\Users\Professional\Desktop\podgot\untitled2.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets

import pymysql as mdb
class Ui_MainWindow2(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(625, 539)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tableWidget = QtWidgets.QTableWidget(parent=self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(150, 140, 331, 211))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setRowCount(0)
        self.pushButton = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(270, 360, 75, 24))
        self.pushButton.setObjectName("pushButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.QB = QtWidgets.QComboBox(parent=self.centralwidget)
        self.QB.setGeometry(QtCore.QRect(370, 360, 75, 24))

        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 625, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.pushButton.clicked.connect(self.showTable)
        self.showCobo()#Заполняем кобобокс


    def load_data(self, data):#Общая функция для вывода любых данных в таблицу (tableWidget)
        self.tableWidget.setRowCount(len(data))
        self.tableWidget.setColumnCount(len(data[0])if data else 0)

        for RowIndex, row in enumerate(data):
            for ColIndex, item in enumerate(row):
                self.tableWidget.setItem(RowIndex, ColIndex, QtWidgets.QTableWidgetItem(str(item)))

    def showTable(self):
        conn = mdb.connect(
            host='localhost',
            user='root',
            database='dbdb'
        )
        cursor = conn.cursor()
        cursor.execute('SELECT * FROM data')#Выбираем че грущить с бд
        res = cursor.fetchall()
        self.load_data(res)#Применяем функцию
        self.asdasd()
    def showCobo(self):
        conn = mdb.connect(
            host='localhost',
            user='root',
            database='dbdb'
        )
        cursor = conn.cursor()
        cursor.execute('SELECT TypeName from Type')
        res = cursor.fetchall()
        for s in res:
            self.QB.addItem(s[0]) ##Заполняем комбо бокс



    def asdasd(self):
        if self.QB.currentText() == 'В работе':
            print('Выбран тип "в работе"')
        else:
            if self.QB.currentText() == 'Готово':
                print("Готово")
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "Обновить"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow2()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
